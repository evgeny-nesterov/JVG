public class Exception {
	static {
		System.loadLib("ExceptionImpl.class");
	}

	private String message;
	private StackTraceElement[] stackTrace;
	private Exception cause;

	public Exception() {
		fillTrace();
		message = "";
	}

	public Exception(String msg) {
		fillTrace();
		message = msg;
	}

	public Exception(String msg, Exception cause) {
		fillTrace();
		message = msg;
		this.cause = cause;
	}

	public String getMessage() {
		return message;
	}

	public Exception getCause() {
	    return cause;
	}

	public void printStackTrace() {
		System.println("Exception: " + message);

		int length = stackTrace.length;
		for (int i = 0; i < length; i++) {
			System.println("\tat " + stackTrace[i].toString());
		}
	}

	private native void fillTrace();

	public String toString() {
		return message;
	}
}

class StackTraceElement {
	String className;
	String methodName;
	int line = -1;

	public String toString() {
		String s = className + "." + methodName;
		if (line >= 0) {
			s = s + ": " + line;
		}
		return s;
	}
}